{
    "contents" : "# server.R\nlibrary(quantmod)\nlibrary(dplyr)\nlibrary(magrittr)\nlibrary(ggplot2)\nsource(\"helpers.R\")\nlibrary(ggvis)\n\noil<-getSymbols('DCOILWTICO',src='FRED',\n                from = start,\n                to = end,\n                auto.assign = FALSE) \n\npx_b <- oil[!is.na(oil[,1])]\nnames(px_b)<-c(\"oil.Adjusted\")\n\nshinyServer(function(input, output) {\n\n  #dataInput <- reactive({\n  #  getSymbols(input$symb, src = \"yahoo\", \n  #             from = input$dates[1],\n  #             to = input$dates[2],\n  #             auto.assign = FALSE)\n  #})\n  \n  px_a <-reactive({ \n    #runs when the button is pushed\n    input$getstock\n    \n    getSymbols(isolate(input$symb), src = \"yahoo\", \n               from = isolate(input$dates[1]),\n               to = isolate(input$dates[2]),\n               auto.assign = FALSE)\n  })\n    \n  \n    \n\n  px_2<-reactive({\n    merge(to.period(px_a(),\n                        period = input$per),\n              to.period(px_b,\n                        period = input$per,\n                        name=c(\"open\",\"high\",\"low\",\"oil.Adjusted\")),  \n              join='inner')\n  })\n\n  \n  clean_px<-  reactive({\n    data.frame(date=index(px_2()),px_2(), row.names = NULL) %>%\n    select(date,contains(\".Adjusted\")) %>%\n    mutate(a_delt = (.[,2]-lag(.[,2]))/lag(.[,2])) %>%\n    mutate(b_delt = (.[,3]-lag(.[,3]))/lag(.[,3])) %>%\n    filter(!is.na(a_delt) & !is.na(b_delt)) %>%\n    arrange(desc(date))\n  })\n\n  clean_zoo<-reactive({\n  as.zoo(as.matrix(clean_px()[,-1]), as.Date(clean_px()[,1]))\n  })\n\n  \n  coeffdata <-  reactive({\n    rollapply(clean_zoo(), width=input$window,\n                          FUN = function(z) {\n                            as.numeric(coef(lm(a_delt ~ b_delt, data = as.data.frame(z))))},\n                          by.column = FALSE,\n                          fill = NA,\n                          align=\"right\",\n                          partial = FALSE) %>%\n    data.frame(date = index(.),coredata(.))\n    \n  })\n  \n  output$line <- renderPlot({\n    LD<-coeffdata()\n    l <- ggplot(LD, aes(x=as.Date(date), y=X2)) +\n      geom_line() + \n      scale_x_date()\n    l\n  })\n  \n  output$scatter <- renderPlot({\n    dd<-clean_px() %>%\n      head(input$window)\n    s <- ggplot(dd, aes(x = b_delt, y = a_delt)) + \n      geom_point() +\n      geom_smooth(method=\"lm\")\n    print(s)\n  })\n  \n  clean_px2 <- reactive({\n    clean_px() %>%\n    mutate(date_t = as.character(format(date,'%m-%d-%Y')))\n  })\n  \n  \n  scatterData <- reactive({\n    clean_px2() %>%\n      head(input$window)\n  })\n    \n  scatterData %>%\n    ggvis(x = ~b_delt, y = ~a_delt) %>%\n    layer_points(size = 2, \n                 key:= ~date_t,\n                 size := 50, \n                 size.hover := 100, \n                 fillOpacity := 0.5, fillOpacity.hover := 0.9) %>%\n    layer_model_predictions(model=\"lm\", formula = a_delt ~ b_delt, se = TRUE) %>%\n    add_tooltip(function(data){\n      paste0(names(data),\":\",format(data),collapse = \"<br />\")}\n      ,\"hover\") %>%\n    add_axis(\"x\", title = \"% Change in Oil Price\", title_offset = 50) %>%\n    add_axis(\"y\", title = \"% Change in Stock Price\", title_offset = 50) %>%\n    bind_shiny(\"ggscatter\")\n\n  output$scatterTable <- renderTable({\n    scatterData()\n  })\n  \n})",
    "created" : 1419022349741.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3705666962",
    "id" : "D52511FA",
    "lastKnownWriteTime" : 1419866224,
    "path" : "~/R_Projects/stockVis/server.R",
    "project_path" : "server.R",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}